- name: Set facts
  ansible.builtin.set_fact:
    pipx_default_python: /usr/bin/python
    pipx_executable: /usr/local/bin/pipx

# ------------------------------------------------------------------------------
# Install Pipx.

- name: Install dependencies with APT
  ansible.builtin.apt:
    name:
      - python3-pip
      - python3-venv
  become: true

- name: Install with pip
  ansible.builtin.pip:
    name: pipx
    state: latest
    executable: /usr/bin/pip

# ------------------------------------------------------------------------------
# Set up environment.

- name: Add block to { bash_profile }
  ansible.builtin.blockinfile:
    path: "{{ bash_profile }}"
    marker: "# {mark} :: ANSIBLE MANAGED BLOCK :: {{ role_name }}"
    block: |
      export PIPX_DEFAULT_PYTHON={{ pipx_default_python }}

- name: Add block to { zsh_zprofile }
  ansible.builtin.blockinfile:
    path: "{{ zsh_zprofile }}"
    marker: "# {mark} :: ANSIBLE MANAGED BLOCK :: {{ role_name }}"
    block: |
      export PIPX_DEFAULT_PYTHON={{ pipx_default_python }}

# ------------------------------------------------------------------------------
# Set up completion.

- name: Add block to { bash_bashrc }
  ansible.builtin.blockinfile:
    path: "{{ bash_bashrc }}"
    marker: "# {mark} :: ANSIBLE MANAGED BLOCK :: {{ role_name }}"
    block: |
      if command -v register-python-argcomplete &> /dev/null; then
        eval "$(register-python-argcomplete pipx)"
      else
        eval "$(register-python-argcomplete3 pipx)"
      fi

- name: Add block to { zsh_zshrc_compinit_post }
  ansible.builtin.blockinfile:
    path: "{{ zsh_zshrc_compinit_post }}"
    marker: "# {mark} :: ANSIBLE MANAGED BLOCK :: {{ role_name }}"
    block: |
      if command -v register-python-argcomplete &> /dev/null; then
        eval "$(register-python-argcomplete pipx)"
      else
        eval "$(register-python-argcomplete3 pipx)"
      fi

# ------------------------------------------------------------------------------
# Install packages with Pipx.

- name: Install Ansible
  ansible.builtin.shell:
    cmd: |
      set -euxo pipefail

      installed=$(pipx --global list --include-injected)

      if ! echo "$installed" | grep -q 'ansible$'; then
        pipx --global install --include-deps ansible
        echo status=changed
      fi

      if ! echo "$installed" | grep -q 'ansible-lint$'; then
        pipx --global inject --include-apps ansible ansible-lint
        echo status=changed
      fi

      if ! echo "$installed" | grep -q ' jmespath '; then
        pipx --global inject ansible jmespath
        echo status=changed
      fi

      if ! echo "$installed" | grep -q ' passlib '; then
        pipx --global inject ansible passlib
        echo status=changed
      fi
    executable: /usr/bin/bash
  become: true
  register: task
  changed_when: "'status=changed' in task.stdout"

- name: Install packages
  community.general.pipx:
    name: "{{ item }}"
    executable: "{{ pipx_executable }}"
  loop:
    - bpython # https://github.com/bpython/bpython
    - pre-commit # https://github.com/pre-commit/pre-commit
